// src/ConsultPage.jsx
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { useAuth } from './AuthContext.jsx';
import './ConsultPage.css'; // ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå CSS ‡∏ô‡∏µ‡πâ
import { useNavigate } from 'react-router-dom';

function ConsultPage() {
  const [specialists, setSpecialists] = useState([]);
  const [myAppointments, setMyAppointments] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const { user, token } = useAuth(); // ‡∏î‡∏∂‡∏á user ‡πÅ‡∏•‡∏∞ token
  const navigate = useNavigate();

  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Modal (‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß)
  const [showModal, setShowModal] = useState(false);
  const [selectedSpecialist, setSelectedSpecialist] = useState(null);
  
  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Form
  const [reason, setReason] = useState('');
  const [requestTime, setRequestTime] = useState('');
  const [formError, setFormError] = useState('');

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏≠ ‡πÅ‡∏•‡∏∞ ‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô
  useEffect(() => {
    const fetchData = async () => {
      setLoading(true);
      try {
        // 1. ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏≠
        const specRes = await axios.get('http://localhost:3001/api/specialists');
        setSpecialists(specRes.data.data);

        // 2. ‡∏ñ‡πâ‡∏≤ Login ‡πÅ‡∏•‡πâ‡∏ß, ‡∏î‡∏∂‡∏á‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô
        if (token) {
          const apptRes = await axios.get('http://localhost:3001/api/my-appointments', {
            headers: { Authorization: `Bearer ${token}` }
          });
          setMyAppointments(apptRes.data.data);
        }
      } catch (err) {
        setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ');
      } finally {
        setLoading(false);
      }
    };
    fetchData();
  }, [token]); // ‡∏î‡∏∂‡∏á‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠ token ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô (‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏û‡∏¥‡πà‡∏á Login)

  // --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Modal ---
  const handleOpenModal = (specialist) => {
    setSelectedSpecialist(specialist);
    setRequestTime(''); // ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏Å‡πà‡∏≤
    setReason('');
    setFormError('');
    setShowModal(true);
  };

  const handleCloseModal = () => {
    setShowModal(false);
    setSelectedSpecialist(null);
  };

  // --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß ---
const handleSubmitBooking = async (e) => {
    e.preventDefault();
    setFormError('');
    if (!requestTime || !selectedSpecialist) {
      setFormError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤');
      return;
    }

    try {
      // 1. üí° ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ (API ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤)
      const res = await axios.post(
        'http://localhost:3001/api/appointments',
        {
          specialistId: selectedSpecialist.id,
          reason: reason,
          requestedTime: requestTime,
        },
        { headers: { Authorization: `Bearer ${token}` } }
      );

      // 2. üí° (‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ)
      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏¥‡∏ß‡πÉ‡∏´‡∏°‡πà (res.data.data) ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô State 'myAppointments' ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
      if (res.data && res.data.data) {
        setMyAppointments(prevAppointments => [res.data.data, ...prevAppointments]);
      }

      // 3. ‡∏õ‡∏¥‡∏î Modal
      handleCloseModal();

    } catch (err) {
      setFormError(err.response?.data?.error || '‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
    }
  };


  return (
    <div className="consult-container">
      <h2>‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç (‡∏à‡∏≥‡∏•‡∏≠‡∏á)</h2>

      {/* --- 1. ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î) --- */}
      <div className="disclaimer-box">
        <h3>‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏ó‡∏£‡∏≤‡∏ö‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô</h3>
        <p>
          ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠ **‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô** ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏à‡∏£‡∏¥‡∏á
          ‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏à‡∏£‡∏¥‡∏á
        </p>
        <p className="emergency">
          ‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏†‡∏≤‡∏ß‡∏∞‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô<br />
          ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ **‡∏™‡∏≤‡∏¢‡∏î‡πà‡∏ß‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏à‡∏¥‡∏ï 1323** ‡∏ï‡∏•‡∏≠‡∏î 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
        </p>
      </div>

      {loading && <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>}
      {error && <p className="error-message">{error}</p>}

      {/* --- 2. ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô (‡∏ñ‡πâ‡∏≤ Login) --- */}
      {user && (
        <section className="my-appointments">
          <h2>‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</h2>
          {/* ... (‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏™‡∏î‡∏á myAppointments) ... */}
            {myAppointments.map(appt => (
              <li key={appt.id}>
                {/* ... (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢) ... */}
                <div className="appt-status">
  <strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> 
  
  {/* 1. ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡πÑ‡∏õ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏¥‡∏ß‡πÉ‡∏´‡∏°‡πà) */}
  {appt.status === 'pending' && (
    <span className="status-pending">‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</span>
  )}

  {/* 2. ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß */}
  {appt.status === 'confirmed' && appt.paymentStatus === 'unpaid' && (
    <>
      <span className="status-confirmed">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß (‡∏£‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô)</span>
      <button 
        className="pay-btn" 
        onClick={() => navigate(`/payment/${appt.id}`)}
      >
        ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
      </button>
    </>
  )}

  {/* 3. ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡πÑ‡∏õ (‡∏ñ‡πâ‡∏≤‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß) */}
  {appt.status === 'confirmed' && appt.paymentStatus === 'paid' && (
    <span className="status-paid">‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢</span>
  )}

  {/* 4. ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡πÑ‡∏õ (‡∏ñ‡πâ‡∏≤‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å) */}
  {appt.status === 'cancelled' && (
    <span className="status-cancelled">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</span>
  )}
</div>
              </li>
            ))}
        </section>
      )}

      {/* --- 3. ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏≠ --- */}
      <div className="specialists-list">
        <h3>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤</h3>
        <div className="specialist-grid">
          {specialists.map((spec) => (
            <div key={spec.id} className="specialist-card">
              <img src={spec.photoUrl} alt={spec.name} className="specialist-photo" />
              <h4>{spec.name}</h4>
              <p className="spec-title">{spec.title}</p>
              <p className="spec-specialty">‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç: {spec.specialty}</p>
              <p className="spec-desc">{spec.description}</p>
              {user ? (
                <button onClick={() => handleOpenModal(spec)} className="book-btn">
                  ‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢
                </button>
              ) : (
                <p className="login-prompt">
                  ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ <a href="/login">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</a> ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß
                </p>
              )}
            </div>
          ))}
        </div>
      </div>

      {/* --- 4. Modal (‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á Pop-up) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß --- */}
      {showModal && selectedSpecialist && (
        <div className="modal-backdrop" onClick={handleCloseModal}>
          <div className="modal-content" onClick={(e) => e.stopPropagation()}>
            <form onSubmit={handleSubmitBooking}>
              <h3>‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏∏‡∏ì {selectedSpecialist.name}</h3>
              <div className="input-group">
                <label>‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)</label>
                <textarea
                  value={reason}
                  onChange={(e) => setReason(e.target.value)}
                  placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏Å‡∏±‡∏á‡∏ß‡∏•, ‡∏ô‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏´‡∏•‡∏±‡∏ö..."
                />
              </div>
              <div className="input-group">
                <label>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å</label>
                <input
                  type="datetime-local"
                  value={requestTime}
                  onChange={(e) => setRequestTime(e.target.value)}
                  required
                />
              </div>
              {formError && <p className="error-message">{formError}</p>}
              <div className="modal-actions">
                <button type="button" className="cancel-btn" onClick={handleCloseModal}>
                  ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                </button>
                <button type="submit" className="submit-btn">
                  ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠
                </button>
              </div>
            </form>
          </div>
        </div>
      )}

    </div>
  );
}

export default ConsultPage;