// src/PodcastDetailPage.jsx
import React, { useState, useEffect } from "react";
import axios from "axios";
import { useParams } from "react-router-dom";
import "./PodcastDetailPage.css"; // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå CSS ‡∏ô‡∏µ‡πâ

function PodcastDetailPage() {
  const [podcast, setPodcast] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const { id } = useParams();

  useEffect(() => {
    const fetchPodcast = async () => {
      try {
        const response = await axios.get(`http://localhost:3001/api/podcasts/${id}`);
        setPodcast(response.data.data);
      } catch (err) {
        setError("‡πÑ‡∏°‡πà‡∏û‡∏ö Podcast ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤");
      } finally {
        setLoading(false);
      }
    };
    fetchPodcast();
  }, [id]);

  // --- üí° ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡∏°‡πà üí° ---
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå YouTube ‡∏ó‡∏∏‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö (watch, youtu.be, embed)
  // ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏¥‡∏á‡∏Å‡πå /embed/ ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö iframe
  const getYouTubeEmbedUrl = (url) => {
    if (!url) return ''; // ‡∏Å‡∏±‡∏ô error ‡∏ñ‡πâ‡∏≤ url ‡πÄ‡∏õ‡πá‡∏ô null

    let videoId = '';
    
    // Regex ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏î‡∏∂‡∏á Video ID ‡∏à‡∏≤‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå YouTube ‡∏ó‡∏∏‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
    // (watch?v=, youtu.be/, /embed/, /v/)
    try {
      const regex = /(?:youtube\.com\/(?:[^\/]+\/.+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^"&?\/ ]{11})/;
      const match = url.match(regex);
      
      if (match && match[1]) {
        videoId = match[1];
      }
    } catch (e) {
      console.error("Error parsing YouTube URL:", url, e);
      return ''; // ‡∏ñ‡πâ‡∏≤‡∏û‡∏±‡∏á ‡∏Å‡πá‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    }

    if (videoId) {
      return `https://www.youtube.com/embed/${videoId}`;
    }
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡πÄ‡∏•‡∏¢ (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô URL ‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏á)
    console.warn("Could not extract YouTube ID from:", url);
    return ''; // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á‡πÑ‡∏õ‡πÄ‡∏•‡∏¢
  };
  // --- ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ---

  if (loading) return <div className="podcast-detail-container"><p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p></div>;
  if (error) return <div className="podcast-detail-container"><p className="error-message">{error}</p></div>;
  if (!podcast) return null;

  // ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
  const videoSrc = podcast.type === "youtube" 
    ? getYouTubeEmbedUrl(podcast.url) 
    : podcast.url; // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö 'upload' ‡∏°‡∏±‡∏ô‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡πá‡∏ô http://localhost:3001/... ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß

  return (
    <div className="podcast-detail-container">
      <h2>{podcast.title}</h2>
      
      <div className="podcast-player-wrapper">
        
        {/* ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• */}
        {podcast.type === "youtube" ? (
          <iframe
            width="100%"
            height="400"
            src={videoSrc} // ‡πÉ‡∏ä‡πâ videoSrc ‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß
            title={podcast.title}
            frameBorder="0"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            allowFullScreen
          ></iframe>
        ) : (
          <video
            width="100%"
            height="400"
            controls
            src={videoSrc} // ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠ URL ‡∏ó‡∏µ‡πà‡∏ä‡∏µ‡πâ‡πÑ‡∏õ http://localhost:3001/uploads/media/file.mp4
          >
            Your browser does not support the video tag.
          </video>
        )}
        
        {/* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö URL (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Debug ‡∏ñ‡πâ‡∏≤‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏û‡∏±‡∏á) */}
        {videoSrc === '' && podcast.type === 'youtube' && (
          <p className="error-message">‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• YouTube video ‡πÑ‡∏î‡πâ: URL ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ({podcast.url})</p>
        )}

      </div>

      <div className="podcast-content-description">
        <h3>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:</h3>
        <p>{podcast.description}</p>
      </div>
    </div>
  );
}

export default PodcastDetailPage;